<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="maximilian_8embind_8cpp" kind="file" language="C++">
    <compoundname>maximilian.embind.cpp</compoundname>
    <includes local="no">emscripten.h</includes>
    <includes local="no">emscripten/bind.h</includes>
    <includes refid="maximilian_8h" local="yes">maximilian.h</includes>
    <includes refid="maxiFFT_8h" local="yes">libs/maxiFFT.h</includes>
    <includes refid="maxiMFCC_8h" local="yes">libs/maxiMFCC.h</includes>
    <includes refid="maxiReverb_8h" local="yes">libs/maxiReverb.h</includes>
    <includes refid="maxiClock_8h" local="yes">libs/maxiClock.h</includes>
    <includes refid="stb__vorbis_8h" local="yes">libs/stb_vorbis.h</includes>
    <incdepgraph>
      <node id="4">
        <label>maximilian.h</label>
        <link refid="maximilian_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>valarray</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="3">
        <label>emscripten/bind.h</label>
      </node>
      <node id="1">
        <label>/home/ck84/src/Maximilian/src/maximilian.embind.cpp</label>
        <link refid="maximilian_8embind_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>numeric</label>
      </node>
      <node id="22">
        <label>libs/stb_vorbis.h</label>
        <link refid="stb__vorbis_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cfloat</label>
      </node>
      <node id="2">
        <label>emscripten.h</label>
      </node>
      <node id="17">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="16">
        <label>fft.h</label>
        <link refid="fft_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>libs/maxiFFT.h</label>
        <link refid="maxiFFT_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>libs/maxiClock.h</label>
        <link refid="maxiClock_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="19">
        <label>libs/maxiReverb.h</label>
        <link refid="maxiReverb_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>math.h</label>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="23">
        <label>stdio.h</label>
      </node>
      <node id="18">
        <label>libs/maxiMFCC.h</label>
        <link refid="maxiMFCC_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classvectorTools" prot="public">vectorTools</innerclass>
    <innerclass refid="classmaxiFFTAdaptor" prot="public">maxiFFTAdaptor</innerclass>
    <innerclass refid="classmaxiIFFTAdaptor" prot="public">maxiIFFTAdaptor</innerclass>
    <innerclass refid="classmaxiMFCCAdaptor" prot="public">maxiMFCCAdaptor</innerclass>
    <innernamespace refid="namespaceemscripten">emscripten</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="maximilian_8embind_8cpp_1aae580742b3b89c1579f82074787ad8db" prot="public" static="no">
        <name>Maxi_Emscripten_maxi_embind_h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" line="7" column="9" bodyfile="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="maximilian_8embind_8cpp_1ad5de67a10b2789951461a2732616f607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EMSCRIPTEN_BINDINGS</definition>
        <argsstring>(my_module)</argsstring>
        <name>EMSCRIPTEN_BINDINGS</name>
        <param>
          <type>my_module</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" line="38" column="1" bodyfile="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" bodystart="38" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="maximilian_8embind_8cpp_1a180e9253b1f9ffb0b3ae2e3bb50e6c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EMSCRIPTEN_BINDINGS</definition>
        <argsstring>(my_module_maxibits)</argsstring>
        <name>EMSCRIPTEN_BINDINGS</name>
        <param>
          <type>my_module_maxibits</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" line="544" column="1" bodyfile="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" bodystart="544" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="maximilian_8embind_8cpp_1a0a64ddcd366084a1821b9365bf625c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EMSCRIPTEN_BINDINGS</definition>
        <argsstring>(maxiCounter)</argsstring>
        <name>EMSCRIPTEN_BINDINGS</name>
        <param>
          <type><ref refid="classmaxiCounter" kindref="compound">maxiCounter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" line="600" column="1" bodyfile="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" bodystart="600" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="maximilian_8embind_8cpp_1a2df36c5dc2eb8ebe8230764cb1a9d145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EMSCRIPTEN_BINDINGS</definition>
        <argsstring>(maxiVerb)</argsstring>
        <name>EMSCRIPTEN_BINDINGS</name>
        <param>
          <type>maxiVerb</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" line="638" column="1" bodyfile="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" bodystart="638" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="maximilian_8embind_8cpp_1a82cd39cdc198482a3bb3c092c139fe71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>emscripten::val</type>
        <definition>emscripten::val getJSArray</definition>
        <argsstring>(vector&lt; T &gt; &amp;buffer)</argsstring>
        <name>getJSArray</name>
        <param>
          <type>vector&lt; T &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" line="665" column="17" bodyfile="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" bodystart="665" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="maximilian_8embind_8cpp_1a5123c93e5b5320aaa06be8eeaf5dd779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EMSCRIPTEN_BINDINGS</definition>
        <argsstring>(maxiSpectral)</argsstring>
        <name>EMSCRIPTEN_BINDINGS</name>
        <param>
          <type>maxiSpectral</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" line="742" column="1" bodyfile="/home/ck84/src/Maximilian/src/maximilian.embind.cpp" bodystart="742" bodyend="802"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>contains<sp/><sp/>bindings<sp/>for<sp/>use<sp/>with<sp/>emscripten</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>there<sp/>are<sp/>some<sp/>functions<sp/>that<sp/>are<sp/>transpiled<sp/>using<sp/>CHEERP<sp/>instead<sp/>for<sp/>speed<sp/>-<sp/>see<sp/>the<sp/>purejs<sp/>folder</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Maxi_Emscripten_maxi_embind_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Maxi_Emscripten_maxi_embind_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;emscripten.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;emscripten/bind.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;maximilian.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libs/maxiFFT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;libs/maxiGrains.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libs/maxiMFCC.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libs/maxiReverb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libs/maxiClock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;libs/maxiSynths.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;libs/fft.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;libs/stb_vorbis.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classvectorTools" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvectorTools" kindref="compound">vectorTools</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearVectorDbl(vector&lt;double&gt;<sp/>&amp;vecIn)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecIn.clear();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearVectorFloat(vector&lt;float&gt;<sp/>&amp;vecIn)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vecIn.clear();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">emscripten;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">EMSCRIPTEN_BINDINGS(my_module)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>register_vector&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;VectorInt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>register_vector&lt;double&gt;(</highlight><highlight class="stringliteral">&quot;VectorDouble&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>register_vector&lt;char&gt;(</highlight><highlight class="stringliteral">&quot;VectorChar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>register_vector&lt;unsigned<sp/>char&gt;(</highlight><highlight class="stringliteral">&quot;VectorUChar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>register_vector&lt;float&gt;(</highlight><highlight class="stringliteral">&quot;VectorFloat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;vectorTools&gt;(</highlight><highlight class="stringliteral">&quot;vectorTools&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;clearVectorDbl&quot;</highlight><highlight class="normal">,<sp/>&amp;vectorTools::clearVectorDbl)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;clearVectorFloat&quot;</highlight><highlight class="normal">,<sp/>&amp;vectorTools::clearVectorFloat)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.class_function(&quot;print&quot;,<sp/>&amp;vectorTools::pr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maxi<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiSettings&gt;(</highlight><highlight class="stringliteral">&quot;maxiSettings&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;setup&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiSettings_1a916fd58919848627dc71560922eca7d1" kindref="member">maxiSettings::setup</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;getSampleRate&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiSettings::getSampleRate)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;channels&quot;,<sp/>&amp;maxiSettings::getNumChannels,<sp/>&amp;maxiSettings::setNumChannels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;bufferSize&quot;,<sp/>&amp;maxiSettings::getBufferSize,<sp/>&amp;maxiSettings::setBufferSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>OSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>class_&lt;maxiOsc&gt;(&quot;maxiOsc&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Using<sp/>a<sp/>smart_ptr_constructor<sp/>ensures<sp/>lifetime<sp/>management<sp/><sp/>on<sp/>the<sp/>js<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>returning<sp/>a<sp/>smart_ptr<sp/>when<sp/>a<sp/>constructor<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiOsc&gt;&quot;,<sp/>&amp;std::make_shared&lt;maxiOsc&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;sinewave&quot;,<sp/>&amp;maxiOsc::sinewave)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;coswave&quot;,<sp/>&amp;maxiOsc::coswave)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;phasor&quot;,<sp/>select_overload&lt;double(double)&gt;(&amp;maxiOsc::phasor))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;phasor&quot;,<sp/>select_overload&lt;double(double,<sp/>double,<sp/>double)&gt;(&amp;maxiOsc::phasor))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;saw&quot;,<sp/>&amp;maxiOsc::saw)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;triangle&quot;,<sp/>&amp;maxiOsc::triangle)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;square&quot;,<sp/>&amp;maxiOsc::square)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;pulse&quot;,<sp/>&amp;maxiOsc::pulse)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;impulse&quot;,<sp/>&amp;maxiOsc::impulse)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;noise&quot;,<sp/>&amp;maxiOsc::noise)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;sinebuf&quot;,<sp/>&amp;maxiOsc::sinebuf)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;sinebuf4&quot;,<sp/>&amp;maxiOsc::sinebuf4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;sawn&quot;,<sp/>&amp;maxiOsc::sawn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>.function(&quot;rect&quot;,<sp/>&amp;maxiOsc::rect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;phaseReset&quot;,<sp/>&amp;maxiOsc::phaseReset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>ENVELOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiEnvelope&gt;(</highlight><highlight class="stringliteral">&quot;maxiEnvelope&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiEnvelope&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiEnvelope&gt;)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;line&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnvelope::line)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;line&quot;,<sp/>&amp;maxiEnvelope::line,<sp/>allow_raw_pointers())<sp/>//<sp/>if<sp/>using<sp/>array<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;trigger&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnvelope::trigger)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;amplitude&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnvelope::getAmplitude,<sp/>&amp;maxiEnvelope::setAmplitude)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;valindex&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnvelope::getValindex,<sp/>&amp;maxiEnvelope::setValindex)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>DELAYLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>class_&lt;maxiDelayline&gt;(&quot;maxiDelayline&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiDelayline&gt;&quot;,<sp/>&amp;std::make_shared&lt;maxiDelayline&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;dl&quot;,<sp/>select_overload&lt;double(double,<sp/>int,<sp/>double)&gt;(&amp;maxiDelayline::dl))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;dl&quot;,<sp/>select_overload&lt;double(double,<sp/>int,<sp/>double,<sp/>int)&gt;(&amp;maxiDelayline::dl));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>FILTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>class_&lt;maxiFilter&gt;(&quot;maxiFilter&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiFilter&gt;&quot;,<sp/>&amp;std::make_shared&lt;maxiFilter&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;lores&quot;,<sp/>&amp;maxiFilter::lores)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;hires&quot;,<sp/>&amp;maxiFilter::hires)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;bandpass&quot;,<sp/>&amp;maxiFilter::bandpass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;lopass&quot;,<sp/>&amp;maxiFilter::lopass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;hipass&quot;,<sp/>&amp;maxiFilter::hipass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(&quot;cutoff&quot;,<sp/>&amp;maxiFilter::getCutoff,<sp/>&amp;maxiFilter::setCutoff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(&quot;resonance&quot;,<sp/>&amp;maxiFilter::getResonance,<sp/>&amp;maxiFilter::setResonance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>MIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiMix&gt;(</highlight><highlight class="stringliteral">&quot;maxiMix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiMix&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiMix&gt;)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="136"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;stereo&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiMix_1a11318d7bbbc883ada570a07a0d0a1bab" kindref="member">maxiMix::stereo</ref>,<sp/>allow_raw_pointers())</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;quad&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiMix_1ad57bfa7266b5638f0acdff028385650a" kindref="member">maxiMix::quad</ref>,<sp/>allow_raw_pointers())</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;ambisonic&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiMix_1a328e0773ca68b2f41b06d63641a93aab" kindref="member">maxiMix::ambisonic</ref>,<sp/>allow_raw_pointers());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>class_&lt;TemplateClass&lt;int&gt;&gt;(&quot;IntTemplateClass&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.constructor&lt;int,<sp/>int,<sp/>int&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;getMember&quot;,<sp/>&amp;TemplateClass&lt;int&gt;::getMember)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiLine&gt;(</highlight><highlight class="stringliteral">&quot;maxiLine&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiLine&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiLine&gt;)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLine_1ae892e5ffc0bda8df5b938b71c01aaa76" kindref="member">maxiLine::play</ref>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;prepare&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLine_1a21ab66a82caff8b9a10169daadf78b86" kindref="member">maxiLine::prepare</ref>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;triggerEnable&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLine_1ad15bb57d04e581a50f4b401a12359b39" kindref="member">maxiLine::triggerEnable</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;isLineComplete&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLine_1a4f6a012fe20ff2230877e2ada9f83499" kindref="member">maxiLine::isLineComplete</ref>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiXFade&gt;(</highlight><highlight class="stringliteral">&quot;maxiXFade&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;xfade&quot;</highlight><highlight class="normal">,<sp/>select_overload&lt;vector&lt;double&gt;<sp/>(vector&lt;double&gt;<sp/>&amp;,<sp/>vector&lt;double&gt;<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;(&amp;<ref refid="classmaxiXFade_1ac7c6c4025e0d5205dcb5fd68e58fe465" kindref="member">maxiXFade::xfade</ref>))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;xfade&quot;</highlight><highlight class="normal">,<sp/>select_overload&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;(&amp;<ref refid="classmaxiXFade_1ac7c6c4025e0d5205dcb5fd68e58fe465" kindref="member">maxiXFade::xfade</ref>))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiLagExp&lt;double&gt;&gt;(</highlight><highlight class="stringliteral">&quot;maxiLagExp&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">#ifdef<sp/>SPN</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>sure<sp/>how<sp/>to<sp/>override<sp/>constructors<sp/>with<sp/>smart_ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiLagExp&lt;double&gt;&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;</ref>&gt;,<sp/>allow_raw_pointers())</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiLagExp&lt;double&gt;&gt;&quot;,&amp;std::make_shared&lt;maxiLagExp&lt;double&gt;&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;init&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::init</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;addSample&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::addSample</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::value</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;alpha&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::getAlpha</ref>,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::setAlpha</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;alphaReciprocal&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::getAlphaReciprocal</ref>,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::setAlphaReciprocal</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;val&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::value</ref>,<sp/>&amp;<ref refid="classmaxiLagExp" kindref="compound">maxiLagExp&lt;double&gt;::setVal</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>MAXI<sp/>SAMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>class_&lt;maxiSample&gt;(&quot;maxiSample&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiSample&gt;&quot;,<sp/>&amp;std::make_shared&lt;maxiSample&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>.property(&quot;length&quot;,<sp/>&amp;maxiSample::getLength,<sp/>&amp;maxiSample::setLength)<sp/>//<sp/>no<sp/>work???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;getLength&quot;,<sp/>&amp;maxiSample::getLength)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>.function(&quot;setSample&quot;,<sp/>&amp;maxiSample::setSample)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;setSample&quot;,<sp/>select_overload&lt;void(vector&lt;double&gt;<sp/>&amp;)&gt;(&amp;maxiSample::setSample))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;setSample&quot;,<sp/>select_overload&lt;void(vector&lt;double&gt;<sp/>&amp;,<sp/>int)&gt;(&amp;maxiSample::setSample))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;setSampleFromOggBlob&quot;,<sp/>&amp;maxiSample::setSampleFromOggBlob)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>.function(&quot;getSummary&quot;,<sp/>&amp;maxiSample::getSummary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;isReady&quot;,<sp/>&amp;maxiSample::isReady)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playOnce&quot;,<sp/>select_overload&lt;double()&gt;(&amp;maxiSample::playOnce))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playOnce&quot;,<sp/>select_overload&lt;double(double)&gt;(&amp;maxiSample::playOnce))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playOnZX&quot;,<sp/>select_overload&lt;double(double)&gt;(&amp;maxiSample::playOnZX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playOnZX&quot;,<sp/>select_overload&lt;double(double,double)&gt;(&amp;maxiSample::playOnZX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playOnZX&quot;,<sp/>select_overload&lt;double(double,double,double)&gt;(&amp;maxiSample::playOnZX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playOnZX&quot;,<sp/>select_overload&lt;double(double,double,double,double)&gt;(&amp;maxiSample::playOnZX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playUntil&quot;,<sp/>select_overload&lt;double(double)&gt;(&amp;maxiSample::playUntil))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playUntil&quot;,<sp/>select_overload&lt;double(double,double)&gt;(&amp;maxiSample::playUntil))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;play&quot;,<sp/>select_overload&lt;double()&gt;(&amp;maxiSample::play))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;play&quot;,<sp/>select_overload&lt;double(double)&gt;(&amp;maxiSample::play))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;play&quot;,<sp/>select_overload&lt;double(double,<sp/>double,<sp/>double)&gt;(&amp;maxiSample::play))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;play4&quot;,<sp/>&amp;maxiSample::play4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;trigger&quot;,<sp/>&amp;maxiSample::trigger)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;clear&quot;,<sp/>&amp;maxiSample::clear)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;normalise&quot;,<sp/>&amp;maxiSample::normalise)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;autoTrim&quot;,<sp/>&amp;maxiSample::autoTrim)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;load&quot;,<sp/>&amp;maxiSample::load)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;read&quot;,<sp/>&amp;maxiSample::read,<sp/>allow_raw_pointers())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;loopSetPosOnZX&quot;,<sp/>&amp;maxiSample::loopSetPosOnZX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>MAXI<sp/>MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>class_&lt;maxiMap&gt;(&quot;maxiMap&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiMap&gt;&quot;,<sp/>&amp;std::make_shared&lt;maxiMap&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;linlin&quot;,<sp/>&amp;maxiMap::linlin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;linexp&quot;,<sp/>&amp;maxiMap::linexp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;explin&quot;,<sp/>&amp;maxiMap::explin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;clamp&quot;,<sp/>&amp;maxiMap::clamp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.class_function(&quot;linlin&quot;,<sp/>&amp;maxiMap::linlin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.class_function(&quot;linexp&quot;,<sp/>&amp;maxiMap::linexp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.class_function(&quot;explin&quot;,<sp/>&amp;maxiMap::explin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>.class_function(&quot;clamp&quot;,<sp/>&amp;maxiMap::clamp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>DYN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiDyn&gt;(</highlight><highlight class="stringliteral">&quot;maxiDyn&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiDyn&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiDyn&gt;)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="237"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;gate&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiDyn::gate)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;compressor&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiDyn::compressor)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;compress&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiDyn::compress)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setAttack&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiDyn::setAttack)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setRelease&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiDyn::setRelease)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setThreshold&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiDyn::setThreshold)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setRatio&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiDyn::setRatio);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>ENV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiEnv&gt;(</highlight><highlight class="stringliteral">&quot;maxiEnv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiEnv&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiEnv&gt;)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="252"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;ar&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnv::ar)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;adsr&quot;,<sp/>&amp;maxiEnv::adsr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;adsr&quot;</highlight><highlight class="normal">,<sp/>select_overload&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;(&amp;maxiEnv::adsr))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;adsr&quot;</highlight><highlight class="normal">,<sp/>select_overload&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;(&amp;maxiEnv::adsr))</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setAttack&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnv::setAttack)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setAttackMS&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnv::setAttackMS)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setRelease&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnv::setRelease)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setDecay&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnv::setDecay)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setSustain&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnv::setSustain)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;trigger&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiEnv::getTrigger,<sp/>&amp;maxiEnv::setTrigger);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CONVERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;convert&gt;(</highlight><highlight class="stringliteral">&quot;convert&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;convert&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;convert&gt;)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="270"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;mtof&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiConvert_1a297c99035cb6a4727654133d792c22e1" kindref="member">convert::mtof</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;mtof&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiConvert_1a297c99035cb6a4727654133d792c22e1" kindref="member">convert::mtof</ref>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;msToSamps&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiConvert_1acafb7f84fc30c76960a2b0025ad754b8" kindref="member">convert::msToSamps</ref>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;msToSamps&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiConvert_1acafb7f84fc30c76960a2b0025ad754b8" kindref="member">convert::msToSamps</ref>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.class_function(&quot;mtof&quot;,<sp/>&amp;convert::mtof)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">class_&lt;maxiSampleAndHold&gt;(</highlight><highlight class="stringliteral">&quot;maxiSampleAndHold&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiSampleAndHold&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiSampleAndHold&gt;)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;sah&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiSampleAndHold_1a5271ce0f72e21dc33469cd73abf5985f" kindref="member">maxiSampleAndHold::sah</ref>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>DISTORTION<sp/>-<sp/>for<sp/>backward<sp/>compatibility,<sp/>new<sp/>stuff<sp/>in<sp/>maxiNonlinearity<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class_&lt;maxiDistortion&gt;(&quot;maxiDistortion&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiDistortion&gt;&quot;,<sp/>&amp;std::make_shared&lt;maxiDistortion&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;fastAtan&quot;,<sp/>&amp;maxiDistortion::fastatan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;atanDist&quot;,<sp/>&amp;maxiDistortion::atanDist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;fastAtanDist&quot;,<sp/>&amp;maxiDistortion::fastAtanDist);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class_&lt;maxiNonlinearity&gt;(&quot;maxiNonlinearity&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiNonlinearity&gt;&quot;,<sp/>&amp;std::make_shared&lt;maxiNonlinearity&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;fastAtan&quot;,<sp/>&amp;maxiNonlinearity::fastatan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;atanDist&quot;,<sp/>&amp;maxiNonlinearity::atanDist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;fastAtanDist&quot;,<sp/>&amp;maxiNonlinearity::fastAtanDist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;softclip&quot;,<sp/>&amp;maxiNonlinearity::softclip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;hardclip&quot;,<sp/>&amp;maxiNonlinearity::hardclip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;asymclip&quot;,<sp/>&amp;maxiNonlinearity::asymclip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>FLANGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiFlanger&gt;(</highlight><highlight class="stringliteral">&quot;maxiFlanger&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiFlanger&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiFlanger&gt;)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="319"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;flange&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiFlanger_1abb001b4066237c99e69c983b638d4943" kindref="member">maxiFlanger::flange</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>CHORUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiChorus&gt;(</highlight><highlight class="stringliteral">&quot;maxiChorus&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiChorus&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiChorus&gt;)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="328"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;chorus&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiChorus_1ae6b12ddc4d9bbe3eebc5ac5825fd86a2" kindref="member">maxiChorus::chorus</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>ENVELOPE<sp/>FOLLOWER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>class_&lt;maxiEnvelopeFollowerType&lt;double&gt;&gt;(&quot;maxiEnvelopeFollower&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>//<sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiEnvelopeFollower&gt;&quot;,&amp;std::make_shared&lt;maxiEnvelopeFollowerType&lt;double&gt;&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;setAttack&quot;,<sp/>&amp;maxiEnvelopeFollowerType&lt;double&gt;::setAttack&lt;double&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;setRelease&quot;,<sp/>&amp;maxiEnvelopeFollowerType&lt;double&gt;::setRelease)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;play&quot;,<sp/>&amp;maxiEnvelopeFollowerType&lt;double&gt;::play)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>.function(&quot;reset&quot;,<sp/>&amp;maxiEnvelopeFollowerType&lt;double&gt;::reset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>DC<sp/>BLOCKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiDCBlocker&gt;(</highlight><highlight class="stringliteral">&quot;maxiDCBlocker&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiDCBlocker&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiDCBlocker&gt;)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="347"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiDCBlocker_1a2dc9eb8772f131e4161c157d5f8cdeb7" kindref="member">maxiDCBlocker::play</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>SVF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">class_&lt;maxiSVF&gt;(</highlight><highlight class="stringliteral">&quot;maxiSVF&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiSVF&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiSVF&gt;)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="356"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;setCutoff&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiSVF_1a2ef7577baa3fe7f6357f9e2ad297ca2c" kindref="member">maxiSVF::setCutoff</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setResonance&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiSVF_1afd0a82425008a52ee08a8f1f53607bd8" kindref="member">maxiSVF::setResonance</ref>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiSVF_1a09f66ad10878865f3254b735313df947" kindref="member">maxiSVF::play</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>SVF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">class_&lt;maxiMath&gt;(</highlight><highlight class="stringliteral">&quot;maxiMath&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiMath&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiMath&gt;)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="367"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::add)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;sub&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::sub)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;mul&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::mul)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;div&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::div)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;gt&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::gt)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;lt&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::lt)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;gte&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::gte)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;lte&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::lte)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;mod&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::mod)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;abs&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::abs)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;pow&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMath::xpowy);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:FB<sp/>–<sp/>Uncomment<sp/>–<sp/>this<sp/>is<sp/>giving<sp/>me<sp/>compilation<sp/>errors<sp/>on<sp/>EM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>KICK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class_&lt;maxiKick&gt;(&quot;maxiKick&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>.function(&quot;setPitch&quot;,<sp/>&amp;maxiKick::setPitch)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiKick&gt;&quot;,&amp;std::make_shared&lt;maxiKick&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;play&quot;,<sp/>&amp;maxiKick::play)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;setRelease&quot;,<sp/>&amp;maxiKick::setRelease)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;trigger&quot;,<sp/>&amp;maxiKick::trigger)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;pitch&quot;,<sp/>&amp;maxiKick::getPitch,<sp/>&amp;maxiKick::setPitch)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;distortion&quot;,<sp/>&amp;maxiKick::getDistortion,<sp/>&amp;maxiKick::setDistortion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;cutoff&quot;,<sp/>&amp;maxiKick::getCutoff,<sp/>&amp;maxiKick::setCutoff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;resonance&quot;,<sp/>&amp;maxiKick::getResonance,<sp/>&amp;maxiKick::setResonance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;useDistortion&quot;,<sp/>&amp;maxiKick::getUseDistortion,<sp/>&amp;maxiKick::setUseDistortion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;useLimiter&quot;,<sp/>&amp;maxiKick::getUseLimiter,<sp/>&amp;maxiKick::setUseLimiter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;useFilter&quot;,<sp/>&amp;maxiKick::getUseFilter,<sp/>&amp;maxiKick::setUseFilter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>SNARE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class_&lt;maxiSnare&gt;(&quot;maxiSnare&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiSnare&gt;&quot;,&amp;std::make_shared&lt;maxiSnare&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;play&quot;,<sp/>&amp;maxiSnare::play)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;setPitch&quot;,<sp/>&amp;maxiSnare::setPitch)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;setRelease&quot;,<sp/>&amp;maxiSnare::setRelease)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;trigger&quot;,<sp/>&amp;maxiSnare::trigger)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>HATS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class_&lt;maxiHats&gt;(&quot;maxiHats&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiHats&gt;&quot;,&amp;std::make_shared&lt;maxiHats&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;play&quot;,<sp/>&amp;maxiHats::play)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;setPitch&quot;,<sp/>&amp;maxiHats::setPitch)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;setRelease&quot;,<sp/>&amp;maxiHats::setRelease)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;trigger&quot;,<sp/>&amp;maxiHats::trigger)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>CLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">class_&lt;maxiClock&gt;(</highlight><highlight class="stringliteral">&quot;maxiClock&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiClock&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiClock&gt;)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="425"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;ticker&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::ticker)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setTempo&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::setTempo)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setTicksPerBeat&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::setTicksPerBeat)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;isTick&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::isTick)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;currentCount&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::getCurrentCount,<sp/>&amp;maxiClock::setCurrentCount)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;currentCount&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::getLastCount,<sp/>&amp;maxiClock::setLastCount)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;playHead&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::getPlayHead,<sp/>&amp;maxiClock::setPlayHead)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;bps&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::getBps,<sp/>&amp;maxiClock::setBps)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;bpm&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::getBpm,<sp/>&amp;maxiClock::setBpm)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;tick&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::getTick,<sp/>&amp;maxiClock::setTick)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.property(</highlight><highlight class="stringliteral">&quot;ticks&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiClock::getTicks,<sp/>&amp;maxiClock::setTicks)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">class_&lt;maxiKuramotoOscillator&gt;(</highlight><highlight class="stringliteral">&quot;maxiKuramotoOscillator&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiKuramotoOscillator&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiKuramotoOscillator&gt;)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="445"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillator_1aaa1c665afa490b2cd45b116a23cd4ee5" kindref="member">maxiKuramotoOscillator::play</ref>)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setPhase&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillator_1a6e06188b46a440a5783291d2f0dc33b6" kindref="member">maxiKuramotoOscillator::setPhase</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getPhase&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillator_1af977c10b9b34a677d17d82b3ae432791" kindref="member">maxiKuramotoOscillator::getPhase</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">class_&lt;maxiKuramotoOscillatorSet&gt;(</highlight><highlight class="stringliteral">&quot;maxiKuramotoOscillatorSet&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiKuramotoOscillatorSet&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiKuramotoOscillatorSet,<sp/>const<sp/>size_t&gt;)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;()</highlight></codeline>
<codeline lineno="456"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillatorSet_1ad22aa34111c245897a3e64207879f03e" kindref="member">maxiKuramotoOscillatorSet::play</ref>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setPhase&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillatorSet_1afca0c47a523e883fd1e14b3c951776ac" kindref="member">maxiKuramotoOscillatorSet::setPhase</ref>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setPhases&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillatorSet_1a801c20b123abbd5447f98ca2d0d21c06" kindref="member">maxiKuramotoOscillatorSet::setPhases</ref>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getPhase&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillatorSet_1a3dc3360dd6f61813259389605f4756e9" kindref="member">maxiKuramotoOscillatorSet::getPhase</ref>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiKuramotoOscillatorSet_1a82024e81b9af017de88c119924c9fb71" kindref="member">maxiKuramotoOscillatorSet::size</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">class_&lt;maxiAsyncKuramotoOscillator,<sp/>base&lt;maxiKuramotoOscillatorSet&gt;&gt;(</highlight><highlight class="stringliteral">&quot;maxiAsyncKuramotoOscillator&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">#ifdef<sp/>SPN</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiAsyncKuramotoOscillator&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiAsyncKuramotoOscillator,<sp/>const<sp/>size_t&gt;)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;()</highlight></codeline>
<codeline lineno="470"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiAsyncKuramotoOscillator_1a3ee1b988dcbf2cfb40e58aa8b58da6ad" kindref="member">maxiAsyncKuramotoOscillator::play</ref>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setPhase&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiAsyncKuramotoOscillator_1a4c5cc7f8a4c98d4480a4eec4a3ba87d0" kindref="member">maxiAsyncKuramotoOscillator::setPhase</ref>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;setPhases&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiAsyncKuramotoOscillator_1a8b20fb8a1d59f6884592892134e64013" kindref="member">maxiAsyncKuramotoOscillator::setPhases</ref>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getPhase&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiAsyncKuramotoOscillator_1a6b2a2e5c24008ece09c9c7ec03a975ed" kindref="member">maxiAsyncKuramotoOscillator::getPhase</ref>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiAsyncKuramotoOscillator_1a2b890bd0d5bc44ec7a90ff43537682f3" kindref="member">maxiAsyncKuramotoOscillator::size</ref>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal">};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>maxiGrains<sp/>is<sp/>being<sp/>rewritten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EMSCRIPTEN_BINDINGS(my_module_maxiGrains)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>MAXI<sp/>TIMESTRETCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>class_&lt;maxiTimeStretch&lt;hannWinFunctor&gt;<sp/>&gt;(&quot;maxiTimeStretch&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiTimestretch&lt;hannWinFunctor&gt;<sp/>&gt;&quot;,&amp;std::make_shared&lt;maxiTimeStretch&lt;hannWinFunctor&gt;<sp/>&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>.smart_ptr_constructor&lt;maxiSample*&gt;(&quot;shared_ptr&lt;maxiTimestretch&lt;hannWinFunctor&gt;<sp/>&gt;&quot;,&amp;std::make_shared&lt;maxiTimestretch&lt;hannWinFunctor&gt;<sp/>&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;setSample&quot;,<sp/>&amp;maxiTimeStretch&lt;hannWinFunctor&gt;::setSample,<sp/>allow_raw_pointers())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;getNormalisedPosition&quot;,<sp/>&amp;maxiTimeStretch&lt;hannWinFunctor&gt;::getNormalisedPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;getPosition&quot;,<sp/>&amp;maxiTimeStretch&lt;hannWinFunctor&gt;::getPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;setPosition&quot;,<sp/>&amp;maxiTimeStretch&lt;hannWinFunctor&gt;::setPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;play&quot;,<sp/>&amp;maxiTimeStretch&lt;hannWinFunctor&gt;::play)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;playAtPosition&quot;,<sp/>&amp;maxiTimeStretch&lt;hannWinFunctor&gt;::playAtPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>MAXI<sp/>PITCHSHIFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>class_&lt;maxiPitchShift&lt;hannWinFunctor&gt;<sp/>&gt;(&quot;maxiPitchShift&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiPitchShift&lt;hannWinFunctor&gt;<sp/>&gt;&quot;,&amp;std::make_shared&lt;maxiPitchShift&lt;hannWinFunctor&gt;<sp/>&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;setSample&quot;,<sp/>&amp;maxiPitchShift&lt;hannWinFunctor&gt;::setSample,<sp/>allow_raw_pointers())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;play&quot;,<sp/>&amp;maxiPitchShift&lt;hannWinFunctor&gt;::play)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>MAXI<sp/>PITCHSTRETCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>class_&lt;maxiStretch&lt;hannWinFunctor&gt;<sp/>&gt;(&quot;maxiStretch&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiStretch&lt;hannWinFunctor&gt;<sp/>&gt;&quot;,&amp;std::make_shared&lt;maxiStretch&lt;hannWinFunctor&gt;<sp/>&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;setSample&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::setSample,<sp/>allow_raw_pointers())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;getNormalisedPosition&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::getNormalisedPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;getPosition&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::getPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;setPosition&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::setPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.function(&quot;setLoopStart&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::setLoopStart)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;setLoopEnd&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::setLoopEnd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;getLoopEnd&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::getLoopEnd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;play&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::play)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playAtPosition&quot;,<sp/>&amp;maxiStretch&lt;hannWinFunctor&gt;::playAtPosition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>maxiBitsWrapper<sp/>:<sp/>public<sp/>maxiBits<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>public:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>maxiBitsWrapper()<sp/>:<sp/>maxiBits()<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>maxiBitsWrapper(const<sp/>bitsig<sp/>v)<sp/>:<sp/>maxiBits(v)<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>void<sp/>sett(maxiBits::bitsig<sp/>v){t=v;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>maxiBits::bitsig<sp/>gett()<sp/>{return<sp/>t;};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal">EMSCRIPTEN_BINDINGS(my_module_maxibits)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiBits&gt;(</highlight><highlight class="stringliteral">&quot;maxiBits&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiBits&gt;&quot;,&amp;std::make_shared&lt;maxiBits&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiBits,<sp/>uint32_t&gt;&quot;,&amp;std::make_shared&lt;maxiBits,<sp/>uint32_t&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.constructor&lt;uint32_t&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;sig&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::sig)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;at&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::at)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;shl&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::shl)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;shr&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::shr)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::r)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;land&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::land)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;lor&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::lor)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;lxor&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::lxor)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;neg&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::neg)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;inc&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::inc)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;dec&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::dec)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::add)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;sub&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::sub)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;mul&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::mul)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;div&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::div)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;gt&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::gt)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;lt&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::lt)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;gte&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::gte)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;lte&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::lte)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;eq&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::eq)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;noise&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::noise)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;toSignal&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::toSignal)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;toTrigSignal&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::toTrigSignal)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>.class_function(</highlight><highlight class="stringliteral">&quot;fromSignal&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiBits::fromSignal)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.property(&quot;t&quot;,<sp/>&amp;maxiBits::gett,<sp/>&amp;maxiBits::sett)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">};</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EMSCRIPTEN_BINDINGS(maxiTrigger)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>class_&lt;maxiTrigger<sp/>&gt;(&quot;maxiTrigger&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiTrigger&gt;&quot;,&amp;std::make_shared&lt;maxiTrigger&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>.smart_ptr_constructor&lt;maxiSample*&gt;(&quot;shared_ptr&lt;maxiTimestretch&lt;hannWinFunctor&gt;<sp/>&gt;&quot;,&amp;std::make_shared&lt;maxiTimestretch&lt;hannWinFunctor&gt;<sp/>&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;onZX&quot;,<sp/>&amp;maxiTrigger::onZX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;onChanged&quot;,<sp/>&amp;maxiTrigger::onChanged)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">EMSCRIPTEN_BINDINGS(<ref refid="classmaxiCounter" kindref="compound">maxiCounter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiCounter<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;maxiCounter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiCounter&gt;&quot;</highlight><highlight class="normal">,&amp;std::make_shared&lt;maxiCounter&gt;)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>.smart_ptr_constructor&lt;maxiSample*&gt;(&quot;shared_ptr&lt;maxiTimestretch&lt;hannWinFunctor&gt;<sp/>&gt;&quot;,&amp;std::make_shared&lt;maxiTimestretch&lt;hannWinFunctor&gt;<sp/>&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classmaxiCounter_1aec77792df4bbae4a7b40a5e536936b01" kindref="member">maxiCounter::count</ref>)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">};</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EMSCRIPTEN_BINDINGS(maxiIndex)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>class_&lt;maxiIndex<sp/>&gt;(&quot;maxiIndex&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiIndex&gt;&quot;,&amp;std::make_shared&lt;maxiIndex&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;pull&quot;,<sp/>&amp;maxiIndex::pull)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EMSCRIPTEN_BINDINGS(maxiRatioSeq)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>class_&lt;maxiRatioSeq<sp/>&gt;(&quot;maxiRatioSeq&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(&quot;shared_ptr&lt;maxiRatioSeq&gt;&quot;,&amp;std::make_shared&lt;maxiRatioSeq&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playTrig&quot;,<sp/>&amp;maxiRatioSeq::playTrig)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>.function(&quot;playValues&quot;,<sp/>&amp;maxiRatioSeq::playValues)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal">EMSCRIPTEN_BINDINGS(maxiVerb)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiSatReverb<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;maxiSatReverb&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiSatReverb&gt;&quot;</highlight><highlight class="normal">,&amp;std::make_shared&lt;maxiSatReverb&gt;)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiSatReverb::play)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>class_&lt;maxiFreeVerb<sp/>&gt;(</highlight><highlight class="stringliteral">&quot;maxiFreeVerb&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiFreeVerb&gt;&quot;</highlight><highlight class="normal">,&amp;std::make_shared&lt;maxiFreeVerb&gt;)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;play&quot;</highlight><highlight class="normal">,<sp/>select_overload&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)&gt;(&amp;maxiFreeVerb::play))</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal">};</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">emscripten::val<sp/>getJSArray(vector&lt;T&gt;<sp/>&amp;<sp/>buffer)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emscripten::val(</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emscripten::typed_memory_view(buffer.size(),</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.data()));</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template<sp/>&lt;typename<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::vector&lt;T&gt;<sp/>vecFromJSArray(const<sp/>emscripten::val<sp/>&amp;v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>rv;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>l<sp/>=<sp/>v[&quot;length&quot;].as&lt;unsigned&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>rv.resize(l);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>emscripten::val<sp/>memoryView{emscripten::typed_memory_view(l,<sp/>rv.data())};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>memoryView.call&lt;void&gt;(&quot;set&quot;,<sp/>v);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>rv;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="classmaxiFFTAdaptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmaxiFFTAdaptor" kindref="compound">maxiFFTAdaptor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT" kindref="compound">maxiFFT</ref><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fftSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmaxiFFT_1a55c5d78b8695554df202ae1972972e72" kindref="member">maxiFFT::setup</ref>(fftSize,<sp/>hopSize,<sp/>windowSize);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>process(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/><ref refid="classmaxiFFT_1a39a78d829e4d3b9b0d8e42951c39d456" kindref="member">fftModes</ref><sp/>mode=maxiFFT::WITH_POLAR_CONVERSION)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT_1a2ff237a3a1725298c2490ea7025facfd" kindref="member">maxiFFT::process</ref>(value,<sp/>mode);};</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumBins()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT_1a97c55dd61176566046d08f271b7d07d1" kindref="member">maxiFFT::getNumBins</ref>();}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getFFTSize()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT_1a90ead4f2537038ee8d3c41c422c9a2dd" kindref="member">maxiFFT::getFFTSize</ref>();}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getHopSize()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT_1ab936471eb988b494f15b1a65c0c3b078" kindref="member">maxiFFT::getHopSize</ref>();}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWindowSize()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT_1abf8e62be027da6a697b325def45f09b5" kindref="member">maxiFFT::getWindowSize</ref>();}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spectralFlatness()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT_1acc4730e72661df8f14838358bfd626df" kindref="member">maxiFFT::spectralFlatness</ref>();};</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spectralCentroid()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiFFT_1ad2e507e6b73fe2e9673221dfc664c1bf" kindref="member">maxiFFT::spectralCentroid</ref>();};</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>emscripten::val<sp/>getMagnitudesAsJSArray()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getJSArray&lt;float&gt;(getMagnitudes());}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>emscripten::val<sp/>getMagnitudesDBAsJSArray()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getJSArray&lt;float&gt;(getMagnitudesDB());}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>emscripten::val<sp/>getPhasesAsJSArray()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getJSArray&lt;float&gt;(getPhases());}</highlight></codeline>
<codeline lineno="706"><highlight class="normal">};</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="classmaxiIFFTAdaptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmaxiIFFTAdaptor" kindref="compound">maxiIFFTAdaptor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmaxiIFFT" kindref="compound">maxiIFFT</ref><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fftSize=1024,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hopSize=512,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize=0)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmaxiIFFT_1a8dda8264b352f5172c8eb60ccc9143da" kindref="member">maxiIFFT::setup</ref>(fftSize,<sp/>hopSize,<sp/>windowSize);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1Vec<sp/>=<sp/>vector&lt;float&gt;(fftSize/2);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2Vec<sp/>=<sp/>vector&lt;float&gt;(fftSize/2);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>process(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>emscripten::val&amp;<sp/>data1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>emscripten::val&amp;<sp/>data2,<sp/><ref refid="classmaxiIFFT_1a394e1ad180d729f7079552a09028ed32" kindref="member">fftModes</ref><sp/>mode<sp/>=<sp/><ref refid="classmaxiIFFT_1a394e1ad180d729f7079552a09028ed32ac59dd14bb5ac6e0d9c8186ccba223e70" kindref="member">maxiIFFT::SPECTRUM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trig)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1Vec<sp/>=<sp/>vecFromJSArray&lt;float&gt;(data1);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2Vec<sp/>=<sp/>vecFromJSArray&lt;float&gt;(data2);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmaxiIFFT_1a5f373344f87ac702547afab6000107a6" kindref="member">maxiIFFT::process</ref>(data1Vec,<sp/>data2Vec,<sp/>mode);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;float&gt;<sp/>data1Vec,<sp/>data2Vec;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">};</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="classmaxiMFCCAdaptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmaxiMFCCAdaptor" kindref="compound">maxiMFCCAdaptor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmaxiMFCCAnalyser" kindref="compound">maxiMFCC</ref><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBins,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFilters,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCoeffs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minFreq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxFreq)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxiMFCC::setup(numBins,<sp/>numFilters,<sp/>numCoeffs,<sp/>minFreq,<sp/>maxFreq);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>emscripten::val<sp/>mfcc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>emscripten::val&amp;<sp/>powerSpectrum)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spectrumVector<sp/>=<sp/>vecFromJSArray&lt;float&gt;(powerSpectrum);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>coeffs<sp/>=<sp/>maxiMFCC::mfcc(spectrumVector);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getJSArray&lt;double&gt;(coeffs);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal">};</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal">EMSCRIPTEN_BINDINGS(maxiSpectral)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>FFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_&lt;maxiFFTAdaptor&gt;(</highlight><highlight class="stringliteral">&quot;maxiFFTAdaptor&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiFFTAdaptor&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiFFTAdaptor&gt;)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;setup&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::setup)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;process&quot;,<sp/>select_overload&lt;bool(float,<sp/>maxiFFT::fftModes)&gt;(&amp;maxiFFT::process)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.function(&quot;process&quot;,<sp/>select_overload&lt;bool(float,int)&gt;(&amp;maxiFFT::process))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;process&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::process)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;spectralFlatness&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::spectralFlatness)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;spectralCentroid&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::spectralCentroid)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getMagnitudesAsJSArray&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::getMagnitudesAsJSArray)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getMagnitudesDBAsJSArray&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::getMagnitudesDBAsJSArray)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getPhasesAsJSArray&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::getPhasesAsJSArray)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getNumBins&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::getNumBins)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getFFTSize&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::getFFTSize)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getHopSize&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::getHopSize)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;getWindowSize&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiFFTAdaptor::getWindowSize)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enum_&lt;maxiFFT::fftModes&gt;(</highlight><highlight class="stringliteral">&quot;maxiFFTModes&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;WITH_POLAR_CONVERSION&quot;</highlight><highlight class="normal">,<sp/>maxiFFT::fftModes::WITH_POLAR_CONVERSION)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;NO_POLAR_CONVERSION&quot;</highlight><highlight class="normal">,<sp/>maxiFFT::fftModes::NO_POLAR_CONVERSION)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>IFFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_&lt;maxiIFFTAdaptor&gt;(</highlight><highlight class="stringliteral">&quot;maxiIFFTAdaptor&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiIFFTAdaptor&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiIFFTAdaptor&gt;)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;setup&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiIFFTAdaptor::setup)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;process&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiIFFTAdaptor::process)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enum_&lt;maxiIFFT::fftModes&gt;(</highlight><highlight class="stringliteral">&quot;maxiIFFTModes&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;SPECTRUM&quot;</highlight><highlight class="normal">,<sp/>maxiIFFT::fftModes::SPECTRUM)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;COMPLEX&quot;</highlight><highlight class="normal">,<sp/>maxiIFFT::fftModes::COMPLEX)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MAXI<sp/>MFCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_&lt;maxiMFCCAdaptor&gt;(</highlight><highlight class="stringliteral">&quot;maxiMFCCAdaptor&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#ifdef<sp/>SPN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.smart_ptr_constructor(</highlight><highlight class="stringliteral">&quot;shared_ptr&lt;maxiMFCCAdaptor&gt;&quot;</highlight><highlight class="normal">,<sp/>&amp;std::make_shared&lt;maxiMFCCAdaptor&gt;)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.constructor&lt;&gt;()</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;setup&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMFCCAdaptor::setup)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.function(</highlight><highlight class="stringliteral">&quot;mfcc&quot;</highlight><highlight class="normal">,<sp/>&amp;maxiMFCCAdaptor::mfcc)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ck84/src/Maximilian/src/maximilian.embind.cpp"/>
  </compounddef>
</doxygen>
